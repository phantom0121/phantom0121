Swift를 처음 시작하며....

*Swift에 대하여 

-Swift라는 것은 애플의 ‘ios’ 와 ‘macOS’를 위한 프로그래밍 언어라고 생각하면 된다.

-Swift는 여러 가지 프로그램을 사용하는 ‘다중 패러다임 프로그래밍 언어’이다. 크게 나눠보자면
(1)명령형 프로그램 패러다임
(2)객체지향 프로그램 패러다임
(3)함수형 프로그래밍 패러다임
(4)프로토콜 지향 패러다임
으로 볼 수 있고, 조금 더 세밀하게 보자면
***명령형 과 객체지향 프로그래밍패러다임을 기반----->함수형 프로그래밍 패러다임
***프로토콜 지향 패러다임
이렇게 지향한다고 합니다. 

Swift에서 가장 강조 하는 패러다임.
함수형 프로그래밍 패러다임
프로토콜 지향 프로그래밍 패러다임
이라고 합니다.

#C언어와 C++,Java를 모두 포함한 ‘Swift‘.
      1. 명령형 
*C언어         이렇게 두 가지의 프로그래밍 패러다임을 채용하였고,
      2. 절차적
         1. 명령형
*C++,Java          이렇게 두가지를 사용한다.
         2. 객체지향
----------> 그리고 여기에 함수형 프로그래밍 패러다임을 더하여 Swift라는 언어를 만들었다고 한다.
 -----------------------------------------------------------------------------
*Swift의 특징.
1.Swift는 안전하게 프로그래밍을 할 수 있도록 한다고 한다.

즉 소프트웨어가 출시(베포) 되기전에 프로그래머가 실수를 저질러 버릴수 있기 때문에 그것을 방지하고자 엄격한 문법을 통하여 사전에 방지하도록 만들어졌다,
----->이런 부분이 조금 까다로울 수 있지만 확실히 문법적 제재를 줄이는데 도움이 된다고 하였다. 
----->ex) 옵셔널 기능, guard구문, 오류처리, 강력한 타입통제 등이 있다.

2.Swift는 C언어를 기반으로 한 C, C++, Objective-C 와 같은 프로그래밍 언어를 대체하려는 목적으로 만들어졌다고 한다. 
----->즉 아직은 C언어를 ㄸ라갈 수준은 아니지만 C언어의 수준을 목표로하고 개발중에 있다고 한다.
----->이렇기 때문에 Swift의 성능을 예측 할 수 있고, 일정하게 수준을 유지 할 수 있다는 것에 초점을 두고 있다고 한다.

3.Swift는 표현성 즉 우리가 Swift라는 언어를 사용 할 때 조금 더 편리하게 즉 세련된 문법으로 구현 하기위해 계속적인 업데이트를 하고 있다고 한다.

-----------------------------------------------------------------------------
*스위프트 사용 환경
-Swift를 익히고 연습하기에는 애플에서 공식 지원하는 
(1). Xcode
-->직접 설치 후 사용!
(2). REPL 
-->맥에 깔려있는 터미널에 들어간 후 Swift하는 명령어를 입력하면 Swift REPL
를 사용하는 것이 가장 편리 하다고 한다.
-----------------------------------------------------------------------------
하지만 Swift를 안다고 무조건 적으로 iOS 프로그래밍을 할 수 있는 것은 아니다. 
즉 iOS 와 macOS 앱을 개발할 때 사용 할 수 있는 언어가 추가 되었다고 생각하면 된다.




 



출처:(https://blog.yagom.net/526/)
